// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package solver.proxies;

public class SolverQuestion extends quizapp.proxies.RemoteObject
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Solver.SolverQuestion";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SolverQuestionId("SolverQuestionId"),
		Answer("Answer"),
		SpentTime("SpentTime"),
		Sort("Sort"),
		IsCorrect("IsCorrect"),
		_Id("_Id"),
		CustomCreatedDate("CustomCreatedDate"),
		CustomChangedDate("CustomChangedDate"),
		CustomCreatedDateAsLong("CustomCreatedDateAsLong"),
		CustomChangedDateAsLong("CustomChangedDateAsLong"),
		SolverQuestion_SolverTest("Solver.SolverQuestion_SolverTest"),
		SolverQuestion_Question("Solver.SolverQuestion_Question"),
		RemoteObject_Account_CreatedBy("QuizApp.RemoteObject_Account_CreatedBy"),
		RemoteObject_Account_ChangedBy("QuizApp.RemoteObject_Account_ChangedBy");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SolverQuestion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected SolverQuestion(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject solverQuestionMendixObject)
	{
		super(context, solverQuestionMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, solverQuestionMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static solver.proxies.SolverQuestion initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new solver.proxies.SolverQuestion(context, mendixObject);
	}

	public static solver.proxies.SolverQuestion load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return solver.proxies.SolverQuestion.initialize(context, mendixObject);
	}

	public static java.util.List<solver.proxies.SolverQuestion> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> solver.proxies.SolverQuestion.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of SolverQuestionId
	 */
	public final java.lang.Long getSolverQuestionId()
	{
		return getSolverQuestionId(getContext());
	}

	/**
	 * @param context
	 * @return value of SolverQuestionId
	 */
	public final java.lang.Long getSolverQuestionId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.SolverQuestionId.toString());
	}

	/**
	 * Set value of SolverQuestionId
	 * @param solverquestionid
	 */
	public final void setSolverQuestionId(java.lang.Long solverquestionid)
	{
		setSolverQuestionId(getContext(), solverquestionid);
	}

	/**
	 * Set value of SolverQuestionId
	 * @param context
	 * @param solverquestionid
	 */
	public final void setSolverQuestionId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long solverquestionid)
	{
		getMendixObject().setValue(context, MemberNames.SolverQuestionId.toString(), solverquestionid);
	}

	/**
	 * Get value of Answer
	 * @param answer
	 */
	public final builder.proxies.ENUM_Answer getAnswer()
	{
		return getAnswer(getContext());
	}

	/**
	 * @param context
	 * @return value of Answer
	 */
	public final builder.proxies.ENUM_Answer getAnswer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Answer.toString());
		if (obj == null) {
			return null;
		}
		return builder.proxies.ENUM_Answer.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Answer
	 * @param answer
	 */
	public final void setAnswer(builder.proxies.ENUM_Answer answer)
	{
		setAnswer(getContext(), answer);
	}

	/**
	 * Set value of Answer
	 * @param context
	 * @param answer
	 */
	public final void setAnswer(com.mendix.systemwideinterfaces.core.IContext context, builder.proxies.ENUM_Answer answer)
	{
		if (answer != null) {
			getMendixObject().setValue(context, MemberNames.Answer.toString(), answer.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.Answer.toString(), null);
		}
	}

	/**
	 * @return value of SpentTime
	 */
	public final java.math.BigDecimal getSpentTime()
	{
		return getSpentTime(getContext());
	}

	/**
	 * @param context
	 * @return value of SpentTime
	 */
	public final java.math.BigDecimal getSpentTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.SpentTime.toString());
	}

	/**
	 * Set value of SpentTime
	 * @param spenttime
	 */
	public final void setSpentTime(java.math.BigDecimal spenttime)
	{
		setSpentTime(getContext(), spenttime);
	}

	/**
	 * Set value of SpentTime
	 * @param context
	 * @param spenttime
	 */
	public final void setSpentTime(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal spenttime)
	{
		getMendixObject().setValue(context, MemberNames.SpentTime.toString(), spenttime);
	}

	/**
	 * @return value of Sort
	 */
	public final java.lang.Integer getSort()
	{
		return getSort(getContext());
	}

	/**
	 * @param context
	 * @return value of Sort
	 */
	public final java.lang.Integer getSort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Sort.toString());
	}

	/**
	 * Set value of Sort
	 * @param sort
	 */
	public final void setSort(java.lang.Integer sort)
	{
		setSort(getContext(), sort);
	}

	/**
	 * Set value of Sort
	 * @param context
	 * @param sort
	 */
	public final void setSort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sort)
	{
		getMendixObject().setValue(context, MemberNames.Sort.toString(), sort);
	}

	/**
	 * @return value of IsCorrect
	 */
	public final java.lang.Boolean getIsCorrect()
	{
		return getIsCorrect(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCorrect
	 */
	public final java.lang.Boolean getIsCorrect(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCorrect.toString());
	}

	/**
	 * Set value of IsCorrect
	 * @param iscorrect
	 */
	public final void setIsCorrect(java.lang.Boolean iscorrect)
	{
		setIsCorrect(getContext(), iscorrect);
	}

	/**
	 * Set value of IsCorrect
	 * @param context
	 * @param iscorrect
	 */
	public final void setIsCorrect(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscorrect)
	{
		getMendixObject().setValue(context, MemberNames.IsCorrect.toString(), iscorrect);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of SolverQuestion_SolverTest
	 */
	public final solver.proxies.SolverTest getSolverQuestion_SolverTest() throws com.mendix.core.CoreException
	{
		return getSolverQuestion_SolverTest(getContext());
	}

	/**
	 * @param context
	 * @return value of SolverQuestion_SolverTest
	 * @throws com.mendix.core.CoreException
	 */
	public final solver.proxies.SolverTest getSolverQuestion_SolverTest(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		solver.proxies.SolverTest result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SolverQuestion_SolverTest.toString());
		if (identifier != null) {
			result = solver.proxies.SolverTest.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of SolverQuestion_SolverTest
	 * @param solverquestion_solvertest
	 */
	public final void setSolverQuestion_SolverTest(solver.proxies.SolverTest solverquestion_solvertest)
	{
		setSolverQuestion_SolverTest(getContext(), solverquestion_solvertest);
	}

	/**
	 * Set value of SolverQuestion_SolverTest
	 * @param context
	 * @param solverquestion_solvertest
	 */
	public final void setSolverQuestion_SolverTest(com.mendix.systemwideinterfaces.core.IContext context, solver.proxies.SolverTest solverquestion_solvertest)
	{
		if (solverquestion_solvertest == null) {
			getMendixObject().setValue(context, MemberNames.SolverQuestion_SolverTest.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.SolverQuestion_SolverTest.toString(), solverquestion_solvertest.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of SolverQuestion_Question
	 */
	public final builder.proxies.Question getSolverQuestion_Question() throws com.mendix.core.CoreException
	{
		return getSolverQuestion_Question(getContext());
	}

	/**
	 * @param context
	 * @return value of SolverQuestion_Question
	 * @throws com.mendix.core.CoreException
	 */
	public final builder.proxies.Question getSolverQuestion_Question(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		builder.proxies.Question result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SolverQuestion_Question.toString());
		if (identifier != null) {
			result = builder.proxies.Question.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of SolverQuestion_Question
	 * @param solverquestion_question
	 */
	public final void setSolverQuestion_Question(builder.proxies.Question solverquestion_question)
	{
		setSolverQuestion_Question(getContext(), solverquestion_question);
	}

	/**
	 * Set value of SolverQuestion_Question
	 * @param context
	 * @param solverquestion_question
	 */
	public final void setSolverQuestion_Question(com.mendix.systemwideinterfaces.core.IContext context, builder.proxies.Question solverquestion_question)
	{
		if (solverquestion_question == null) {
			getMendixObject().setValue(context, MemberNames.SolverQuestion_Question.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.SolverQuestion_Question.toString(), solverquestion_question.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final solver.proxies.SolverQuestion that = (solver.proxies.SolverQuestion) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
