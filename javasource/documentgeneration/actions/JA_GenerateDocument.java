// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package documentgeneration.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import documentgeneration.implementation.ActionValidator;
import documentgeneration.implementation.DocumentGenerator;

public class JA_GenerateDocument extends CustomJavaAction<IMendixObject>
{
	private final java.lang.String pageMicroflow;
	private final IMendixObject contextObject;
	private final java.lang.String resultEntity;
	private final java.lang.String fileName;
	/** @deprecated use generateAsUser.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __generateAsUser;
	private final system.proxies.User generateAsUser;
	private final java.lang.Boolean waitForResult;

	public JA_GenerateDocument(
		IContext context,
		java.lang.String _pageMicroflow,
		IMendixObject _contextObject,
		java.lang.String _resultEntity,
		java.lang.String _fileName,
		IMendixObject _generateAsUser,
		java.lang.Boolean _waitForResult
	)
	{
		super(context);
		this.pageMicroflow = _pageMicroflow;
		this.contextObject = _contextObject;
		this.resultEntity = _resultEntity;
		this.fileName = _fileName;
		this.__generateAsUser = _generateAsUser;
		this.generateAsUser = _generateAsUser == null ? null : system.proxies.User.initialize(getContext(), _generateAsUser);
		this.waitForResult = _waitForResult;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		ActionValidator.validateResultEntity(resultEntity);
		ActionValidator.validatePageMicroflow(pageMicroflow, contextObject);
		ActionValidator.validateContextObject(contextObject);
		ActionValidator.validateFileName(fileName);
		ActionValidator.validateDocumentUser(generateAsUser);
		
		DocumentGenerator generator = new DocumentGenerator(resultEntity, fileName, pageMicroflow, generateAsUser)
				.withContextObject(contextObject)
				.withWaitForResult(waitForResult);
						
		return generator.generate();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_GenerateDocument";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
