// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package documentgeneration.proxies;

public class Configuration implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject configurationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DocumentGeneration.Configuration";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		RegistrationStatus("RegistrationStatus"),
		ApplicationUrl("ApplicationUrl"),
		AccessToken("AccessToken"),
		AccessTokenExpirationDate("AccessTokenExpirationDate"),
		RefreshToken("RefreshToken"),
		VerificationToken("VerificationToken"),
		VerificationTokenExpirationDate("VerificationTokenExpirationDate");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Configuration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Configuration(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject configurationMendixObject)
	{
		if (configurationMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, configurationMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.configurationMendixObject = configurationMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static documentgeneration.proxies.Configuration initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new documentgeneration.proxies.Configuration(context, mendixObject);
	}

	public static documentgeneration.proxies.Configuration load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return documentgeneration.proxies.Configuration.initialize(context, mendixObject);
	}

	public static java.util.List<documentgeneration.proxies.Configuration> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> documentgeneration.proxies.Configuration.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Get value of RegistrationStatus
	 * @param registrationstatus
	 */
	public final documentgeneration.proxies.Enum_RegistrationStatus getRegistrationStatus()
	{
		return getRegistrationStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of RegistrationStatus
	 */
	public final documentgeneration.proxies.Enum_RegistrationStatus getRegistrationStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.RegistrationStatus.toString());
		if (obj == null) {
			return null;
		}
		return documentgeneration.proxies.Enum_RegistrationStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of RegistrationStatus
	 * @param registrationstatus
	 */
	public final void setRegistrationStatus(documentgeneration.proxies.Enum_RegistrationStatus registrationstatus)
	{
		setRegistrationStatus(getContext(), registrationstatus);
	}

	/**
	 * Set value of RegistrationStatus
	 * @param context
	 * @param registrationstatus
	 */
	public final void setRegistrationStatus(com.mendix.systemwideinterfaces.core.IContext context, documentgeneration.proxies.Enum_RegistrationStatus registrationstatus)
	{
		if (registrationstatus != null) {
			getMendixObject().setValue(context, MemberNames.RegistrationStatus.toString(), registrationstatus.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.RegistrationStatus.toString(), null);
		}
	}

	/**
	 * @return value of ApplicationUrl
	 */
	public final java.lang.String getApplicationUrl()
	{
		return getApplicationUrl(getContext());
	}

	/**
	 * @param context
	 * @return value of ApplicationUrl
	 */
	public final java.lang.String getApplicationUrl(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ApplicationUrl.toString());
	}

	/**
	 * Set value of ApplicationUrl
	 * @param applicationurl
	 */
	public final void setApplicationUrl(java.lang.String applicationurl)
	{
		setApplicationUrl(getContext(), applicationurl);
	}

	/**
	 * Set value of ApplicationUrl
	 * @param context
	 * @param applicationurl
	 */
	public final void setApplicationUrl(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String applicationurl)
	{
		getMendixObject().setValue(context, MemberNames.ApplicationUrl.toString(), applicationurl);
	}

	/**
	 * @return value of AccessToken
	 */
	public final java.lang.String getAccessToken()
	{
		return getAccessToken(getContext());
	}

	/**
	 * @param context
	 * @return value of AccessToken
	 */
	public final java.lang.String getAccessToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AccessToken.toString());
	}

	/**
	 * Set value of AccessToken
	 * @param accesstoken
	 */
	public final void setAccessToken(java.lang.String accesstoken)
	{
		setAccessToken(getContext(), accesstoken);
	}

	/**
	 * Set value of AccessToken
	 * @param context
	 * @param accesstoken
	 */
	public final void setAccessToken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String accesstoken)
	{
		getMendixObject().setValue(context, MemberNames.AccessToken.toString(), accesstoken);
	}

	/**
	 * @return value of AccessTokenExpirationDate
	 */
	public final java.util.Date getAccessTokenExpirationDate()
	{
		return getAccessTokenExpirationDate(getContext());
	}

	/**
	 * @param context
	 * @return value of AccessTokenExpirationDate
	 */
	public final java.util.Date getAccessTokenExpirationDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.AccessTokenExpirationDate.toString());
	}

	/**
	 * Set value of AccessTokenExpirationDate
	 * @param accesstokenexpirationdate
	 */
	public final void setAccessTokenExpirationDate(java.util.Date accesstokenexpirationdate)
	{
		setAccessTokenExpirationDate(getContext(), accesstokenexpirationdate);
	}

	/**
	 * Set value of AccessTokenExpirationDate
	 * @param context
	 * @param accesstokenexpirationdate
	 */
	public final void setAccessTokenExpirationDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date accesstokenexpirationdate)
	{
		getMendixObject().setValue(context, MemberNames.AccessTokenExpirationDate.toString(), accesstokenexpirationdate);
	}

	/**
	 * @return value of RefreshToken
	 */
	public final java.lang.String getRefreshToken()
	{
		return getRefreshToken(getContext());
	}

	/**
	 * @param context
	 * @return value of RefreshToken
	 */
	public final java.lang.String getRefreshToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.RefreshToken.toString());
	}

	/**
	 * Set value of RefreshToken
	 * @param refreshtoken
	 */
	public final void setRefreshToken(java.lang.String refreshtoken)
	{
		setRefreshToken(getContext(), refreshtoken);
	}

	/**
	 * Set value of RefreshToken
	 * @param context
	 * @param refreshtoken
	 */
	public final void setRefreshToken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String refreshtoken)
	{
		getMendixObject().setValue(context, MemberNames.RefreshToken.toString(), refreshtoken);
	}

	/**
	 * @return value of VerificationToken
	 */
	public final java.lang.String getVerificationToken()
	{
		return getVerificationToken(getContext());
	}

	/**
	 * @param context
	 * @return value of VerificationToken
	 */
	public final java.lang.String getVerificationToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.VerificationToken.toString());
	}

	/**
	 * Set value of VerificationToken
	 * @param verificationtoken
	 */
	public final void setVerificationToken(java.lang.String verificationtoken)
	{
		setVerificationToken(getContext(), verificationtoken);
	}

	/**
	 * Set value of VerificationToken
	 * @param context
	 * @param verificationtoken
	 */
	public final void setVerificationToken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String verificationtoken)
	{
		getMendixObject().setValue(context, MemberNames.VerificationToken.toString(), verificationtoken);
	}

	/**
	 * @return value of VerificationTokenExpirationDate
	 */
	public final java.util.Date getVerificationTokenExpirationDate()
	{
		return getVerificationTokenExpirationDate(getContext());
	}

	/**
	 * @param context
	 * @return value of VerificationTokenExpirationDate
	 */
	public final java.util.Date getVerificationTokenExpirationDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.VerificationTokenExpirationDate.toString());
	}

	/**
	 * Set value of VerificationTokenExpirationDate
	 * @param verificationtokenexpirationdate
	 */
	public final void setVerificationTokenExpirationDate(java.util.Date verificationtokenexpirationdate)
	{
		setVerificationTokenExpirationDate(getContext(), verificationtokenexpirationdate);
	}

	/**
	 * Set value of VerificationTokenExpirationDate
	 * @param context
	 * @param verificationtokenexpirationdate
	 */
	public final void setVerificationTokenExpirationDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date verificationtokenexpirationdate)
	{
		getMendixObject().setValue(context, MemberNames.VerificationTokenExpirationDate.toString(), verificationtokenexpirationdate);
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return configurationMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final documentgeneration.proxies.Configuration that = (documentgeneration.proxies.Configuration) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
