// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package documentgeneration.proxies;

public class RegistrationWizard implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject registrationWizardMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DocumentGeneration.RegistrationWizard";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Email("Email"),
		ApiKey("ApiKey"),
		AppId("AppId"),
		ApplicationUrl("ApplicationUrl"),
		RegistrationWizard_Configuration("DocumentGeneration.RegistrationWizard_Configuration");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RegistrationWizard(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected RegistrationWizard(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject registrationWizardMendixObject)
	{
		if (registrationWizardMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, registrationWizardMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.registrationWizardMendixObject = registrationWizardMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static documentgeneration.proxies.RegistrationWizard initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new documentgeneration.proxies.RegistrationWizard(context, mendixObject);
	}

	public static documentgeneration.proxies.RegistrationWizard load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return documentgeneration.proxies.RegistrationWizard.initialize(context, mendixObject);
	}

	/**
	 * @return value of Email
	 */
	public final java.lang.String getEmail()
	{
		return getEmail(getContext());
	}

	/**
	 * @param context
	 * @return value of Email
	 */
	public final java.lang.String getEmail(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Email.toString());
	}

	/**
	 * Set value of Email
	 * @param email
	 */
	public final void setEmail(java.lang.String email)
	{
		setEmail(getContext(), email);
	}

	/**
	 * Set value of Email
	 * @param context
	 * @param email
	 */
	public final void setEmail(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String email)
	{
		getMendixObject().setValue(context, MemberNames.Email.toString(), email);
	}

	/**
	 * @return value of ApiKey
	 */
	public final java.lang.String getApiKey()
	{
		return getApiKey(getContext());
	}

	/**
	 * @param context
	 * @return value of ApiKey
	 */
	public final java.lang.String getApiKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ApiKey.toString());
	}

	/**
	 * Set value of ApiKey
	 * @param apikey
	 */
	public final void setApiKey(java.lang.String apikey)
	{
		setApiKey(getContext(), apikey);
	}

	/**
	 * Set value of ApiKey
	 * @param context
	 * @param apikey
	 */
	public final void setApiKey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String apikey)
	{
		getMendixObject().setValue(context, MemberNames.ApiKey.toString(), apikey);
	}

	/**
	 * @return value of AppId
	 */
	public final java.lang.String getAppId()
	{
		return getAppId(getContext());
	}

	/**
	 * @param context
	 * @return value of AppId
	 */
	public final java.lang.String getAppId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AppId.toString());
	}

	/**
	 * Set value of AppId
	 * @param appid
	 */
	public final void setAppId(java.lang.String appid)
	{
		setAppId(getContext(), appid);
	}

	/**
	 * Set value of AppId
	 * @param context
	 * @param appid
	 */
	public final void setAppId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String appid)
	{
		getMendixObject().setValue(context, MemberNames.AppId.toString(), appid);
	}

	/**
	 * @return value of ApplicationUrl
	 */
	public final java.lang.String getApplicationUrl()
	{
		return getApplicationUrl(getContext());
	}

	/**
	 * @param context
	 * @return value of ApplicationUrl
	 */
	public final java.lang.String getApplicationUrl(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ApplicationUrl.toString());
	}

	/**
	 * Set value of ApplicationUrl
	 * @param applicationurl
	 */
	public final void setApplicationUrl(java.lang.String applicationurl)
	{
		setApplicationUrl(getContext(), applicationurl);
	}

	/**
	 * Set value of ApplicationUrl
	 * @param context
	 * @param applicationurl
	 */
	public final void setApplicationUrl(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String applicationurl)
	{
		getMendixObject().setValue(context, MemberNames.ApplicationUrl.toString(), applicationurl);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of RegistrationWizard_Configuration
	 */
	public final documentgeneration.proxies.Configuration getRegistrationWizard_Configuration() throws com.mendix.core.CoreException
	{
		return getRegistrationWizard_Configuration(getContext());
	}

	/**
	 * @param context
	 * @return value of RegistrationWizard_Configuration
	 * @throws com.mendix.core.CoreException
	 */
	public final documentgeneration.proxies.Configuration getRegistrationWizard_Configuration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		documentgeneration.proxies.Configuration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RegistrationWizard_Configuration.toString());
		if (identifier != null) {
			result = documentgeneration.proxies.Configuration.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of RegistrationWizard_Configuration
	 * @param registrationwizard_configuration
	 */
	public final void setRegistrationWizard_Configuration(documentgeneration.proxies.Configuration registrationwizard_configuration)
	{
		setRegistrationWizard_Configuration(getContext(), registrationwizard_configuration);
	}

	/**
	 * Set value of RegistrationWizard_Configuration
	 * @param context
	 * @param registrationwizard_configuration
	 */
	public final void setRegistrationWizard_Configuration(com.mendix.systemwideinterfaces.core.IContext context, documentgeneration.proxies.Configuration registrationwizard_configuration)
	{
		if (registrationwizard_configuration == null) {
			getMendixObject().setValue(context, MemberNames.RegistrationWizard_Configuration.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.RegistrationWizard_Configuration.toString(), registrationwizard_configuration.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return registrationWizardMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final documentgeneration.proxies.RegistrationWizard that = (documentgeneration.proxies.RegistrationWizard) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
