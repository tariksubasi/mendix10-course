// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package dataservice.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the DataService module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pRS_Get_EducationalInfoBuilder(
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _schoolId,
		java.lang.String _courseId,
		java.lang.String _lectureId
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("DataService.PRS_Get_EducationalInfo");
		builder = builder.withParam("httpRequest", _httpRequest);
		builder = builder.withParam("httpResponse", _httpResponse);
		builder = builder.withParam("SchoolId", _schoolId);
		builder = builder.withParam("CourseId", _courseId);
		builder = builder.withParam("LectureId", _lectureId);
		return builder;
	}

	public static java.lang.String pRS_Get_EducationalInfo(
		IContext context,
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _schoolId,
		java.lang.String _courseId,
		java.lang.String _lectureId
	)
	{
		Object result = pRS_Get_EducationalInfoBuilder(
				_httpRequest,
				_httpResponse,
				_schoolId,
				_courseId,
				_lectureId
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pRS_GetBuilderTests_ByUserBuilder(
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _userId,
		java.lang.Long _amount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("DataService.PRS_GetBuilderTests_ByUser");
		builder = builder.withParam("httpRequest", _httpRequest);
		builder = builder.withParam("httpResponse", _httpResponse);
		builder = builder.withParam("UserId", _userId);
		builder = builder.withParam("Amount", _amount);
		return builder;
	}

	public static java.lang.String pRS_GetBuilderTests_ByUser(
		IContext context,
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _userId,
		java.lang.Long _amount
	)
	{
		Object result = pRS_GetBuilderTests_ByUserBuilder(
				_httpRequest,
				_httpResponse,
				_userId,
				_amount
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pRS_GetTestsBuilder(
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("DataService.PRS_GetTests");
		builder = builder.withParam("httpRequest", _httpRequest);
		builder = builder.withParam("httpResponse", _httpResponse);
		return builder;
	}

	public static java.lang.String pRS_GetTests(
		IContext context,
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse
	)
	{
		Object result = pRS_GetTestsBuilder(
				_httpRequest,
				_httpResponse
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetRouteFromURIBuilder(
		system.proxies.HttpRequest _httpRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("DataService.SUB_GetRouteFromURI");
		builder = builder.withParam("HttpRequest", _httpRequest);
		return builder;
	}

	public static java.lang.String sUB_GetRouteFromURI(
		IContext context,
		system.proxies.HttpRequest _httpRequest
	)
	{
		Object result = sUB_GetRouteFromURIBuilder(
				_httpRequest
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_LogAtEndBuilder(
		java.lang.String _routeName,
		java.util.Date _startDate
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("DataService.SUB_LogAtEnd");
		builder = builder.withParam("RouteName", _routeName);
		builder = builder.withParam("StartDate", _startDate);
		return builder;
	}

	public static void sUB_LogAtEnd(
		IContext context,
		java.lang.String _routeName,
		java.util.Date _startDate
	)
	{
		sUB_LogAtEndBuilder(
				_routeName,
				_startDate
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_LogAtStartBuilder(
		java.util.Date _startDate,
		system.proxies.HttpRequest _httpRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("DataService.SUB_LogAtStart");
		builder = builder.withParam("StartDate", _startDate);
		builder = builder.withParam("httpRequest", _httpRequest);
		return builder;
	}

	public static java.lang.String sUB_LogAtStart(
		IContext context,
		java.util.Date _startDate,
		system.proxies.HttpRequest _httpRequest
	)
	{
		Object result = sUB_LogAtStartBuilder(
				_startDate,
				_httpRequest
			)
			.execute(context);
		return (java.lang.String) result;
	}
}
