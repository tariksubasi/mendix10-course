// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package builder.proxies;

public class Lecture extends quizapp.proxies.RemoteObject
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Builder.Lecture";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LectureId("LectureId"),
		LectureName("LectureName"),
		_Id("_Id"),
		CustomCreatedDate("CustomCreatedDate"),
		CustomChangedDate("CustomChangedDate"),
		CustomCreatedDateAsLong("CustomCreatedDateAsLong"),
		CustomChangedDateAsLong("CustomChangedDateAsLong"),
		Lecture_Course("Builder.Lecture_Course"),
		RemoteObject_Account_CreatedBy("QuizApp.RemoteObject_Account_CreatedBy"),
		RemoteObject_Account_ChangedBy("QuizApp.RemoteObject_Account_ChangedBy");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Lecture(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Lecture(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject lectureMendixObject)
	{
		super(context, lectureMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, lectureMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static builder.proxies.Lecture initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new builder.proxies.Lecture(context, mendixObject);
	}

	public static builder.proxies.Lecture load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return builder.proxies.Lecture.initialize(context, mendixObject);
	}

	public static java.util.List<builder.proxies.Lecture> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> builder.proxies.Lecture.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of LectureId
	 */
	public final java.lang.Long getLectureId()
	{
		return getLectureId(getContext());
	}

	/**
	 * @param context
	 * @return value of LectureId
	 */
	public final java.lang.Long getLectureId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.LectureId.toString());
	}

	/**
	 * Set value of LectureId
	 * @param lectureid
	 */
	public final void setLectureId(java.lang.Long lectureid)
	{
		setLectureId(getContext(), lectureid);
	}

	/**
	 * Set value of LectureId
	 * @param context
	 * @param lectureid
	 */
	public final void setLectureId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long lectureid)
	{
		getMendixObject().setValue(context, MemberNames.LectureId.toString(), lectureid);
	}

	/**
	 * @return value of LectureName
	 */
	public final java.lang.String getLectureName()
	{
		return getLectureName(getContext());
	}

	/**
	 * @param context
	 * @return value of LectureName
	 */
	public final java.lang.String getLectureName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LectureName.toString());
	}

	/**
	 * Set value of LectureName
	 * @param lecturename
	 */
	public final void setLectureName(java.lang.String lecturename)
	{
		setLectureName(getContext(), lecturename);
	}

	/**
	 * Set value of LectureName
	 * @param context
	 * @param lecturename
	 */
	public final void setLectureName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String lecturename)
	{
		getMendixObject().setValue(context, MemberNames.LectureName.toString(), lecturename);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Lecture_Course
	 */
	public final builder.proxies.Course getLecture_Course() throws com.mendix.core.CoreException
	{
		return getLecture_Course(getContext());
	}

	/**
	 * @param context
	 * @return value of Lecture_Course
	 * @throws com.mendix.core.CoreException
	 */
	public final builder.proxies.Course getLecture_Course(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		builder.proxies.Course result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Lecture_Course.toString());
		if (identifier != null) {
			result = builder.proxies.Course.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Lecture_Course
	 * @param lecture_course
	 */
	public final void setLecture_Course(builder.proxies.Course lecture_course)
	{
		setLecture_Course(getContext(), lecture_course);
	}

	/**
	 * Set value of Lecture_Course
	 * @param context
	 * @param lecture_course
	 */
	public final void setLecture_Course(com.mendix.systemwideinterfaces.core.IContext context, builder.proxies.Course lecture_course)
	{
		if (lecture_course == null) {
			getMendixObject().setValue(context, MemberNames.Lecture_Course.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Lecture_Course.toString(), lecture_course.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final builder.proxies.Lecture that = (builder.proxies.Lecture) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
